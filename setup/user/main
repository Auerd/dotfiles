#!/bin/bash

set -eu

echo "Setting up home directory"

# source: https://stackoverflow.com/questions/59895/how-do-i-get-the-directory-where-a-bash-script-is-located-from-within-the-script
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
FILES_DIR="$SCRIPT_DIR"/../..
PATH=$PATH:$SCRIPT_DIR

font_installed=0
fc-list | grep "JetBrainsMono Nerd Font," &>/dev/null || font_installed=$?

if [[ $font_installed -ne 0 ]] && ask "JetBrainsMono NF is not installed. Do you want to install locally? (y/n)"; then
  fontname=JetBrainsMono
  fontdir=${XDG_DATA_HOME:-$HOME/.local/share}/fonts/$fontname
  releaselink=https://api.github.com/repos/ryanoasis/nerd-fonts/releases/latest
  mkdir -p "$fontdir/"
  if command -v unxz &>/dev/null; then
    filextension="tar.xz"
  elif command -v unzip &>/dev/null; then
    filextension="zip"
  else
    echo "Neither unxz nor unzip was found. Please, install one"
    exit 1
  fi
  archivename="$fontname.$filextension"
  archivepath="$fontdir/$archivename"
  # source: https://gist.github.com/steinwaywhw/a4cd19cda655b8249d908261a62687f8
  if command -v curl &>/dev/null; then
    # Getting archive
    curl -L "$(curl -s $releaselink |
      grep "$archivename" |
      grep "https://" |
      cut -d : -f 2,3 |
      tr -d \" |
      tr -d " ")" -o "$archivepath"
  elif command -v wget &>/dev/null; then
    wget -q $releaselink -O - |
      grep "$archivename" |
      grep "https://" |
      cut -d : -f 2,3 |
      tr -d \" |
      tr -d " " |
      wget -i - -O "$archivepath"
  else
    echo "Neither curl nor wget was found. Please, install one"
    exit 1
  fi
  case $filextension in
  "tar.xz") tar -xf "$archivepath" -C "$fontdir" ;;
  "zip") unzip "$archivename" -d "$fontdir" ;;
  esac
  rm "$archivepath"
  font_installed=0
fi

function setup-alacritty() {
  local confdir="$1/alacritty"
  local defaultconf="$confdir/default.toml"
  if ! [ -f "$defaultconf" ]; then
    return 1
  fi
  local mainconf="$confdir/alacritty.toml"
  touch "$mainconf"
  echo "import = [\"$defaultconf\"]" >"$mainconf"
  if [[ $font_installed -eq 0 ]]; then
    return 0
  fi
  printf "\n[font.normal]\nfamily = monospace" >"$mainconf"
  echo "Warning! Alacritty will use monospace font as JetBrainsMono NF is not installed"
}

function setup-kitty() {
  local confdir="$1/kitty"
  local defaultconf="$confdir/kitty.conf"
  if ! [ -f "$defaultconf" ]; then
    return 1
  fi
  local mainconf="$confdir/custom.conf"
  touch "$mainconf"
  if [[ $font_installed -eq 0 ]]; then
    return 0
  fi
  printf "font_family   monospace" >"$mainconf"
  echo "Warning! Kitty will use monospace font as JetBrainsMono NF is not installed"
  return 0
}

for file in "$FILES_DIR"/*; do
  filename=${file##*/}
  case $filename in
  "setup") ;;
  "config")
    confdir="${XDG_CONFIG_HOME:-$HOME/.config}"
    ndlink "$file" "$confdir"
    setup-alacritty "$confdir"
    setup-kitty "$confdir"
    ;;
  "termux")
    termuxdir="$HOME/.termux"
    ndlink "$file" "$termuxdir"
    ;;
  "local")
    [[ -d "$file/share" ]] && ndlink "$file/share" "${XDG_DATA_HOME:-$HOME/.local/share}"
    [[ -d "$file/state" ]] && ndlink "$file/state" "${XDG_STATE_HOME:-$HOME/.local/state}"
    ;;
  "x"*)
    [[ -e "$HOME/.$filename" ]] || cp "$file" "$HOME/.$filename"
    ;;
  *)
    nlink "$file" "$HOME/.$filename"
    ;;
  esac
done

filename=".background.jpg"
filepath="$HOME/$filename"
if [[ -e "$filepath" ]]; then
  echo "$HOME/$filename exists. Skipping..."
else
  link='https://i.imgur.com/Pjj3KTp.jpeg'
  if command -v curl &>/dev/null; then
    echo "Getting $filename..."
    curl -# -o "$filepath" -L "$link"
  elif command -v wget &>/dev/null; then
    echo "Getting $filename..."
    wget -O "$filepath" "$link"
  else
    echo "Neither curl nor wget were found. Please install one"
  fi
fi
